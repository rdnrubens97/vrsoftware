/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.vrs.projetovrs.view;

import com.vrs.projetovrs.dao.ClienteDao;
import com.vrs.projetovrs.model.Cliente;
import com.vrs.projetovrs.util.Utilities;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.util.List;

/**
 * @author Rubens
 */
public class ClienteView extends javax.swing.JFrame {

    private static final int ESTADO_INICIAL = 0;
    private static final int ESTADO_EDITANDO = 1;
    private static final int ESTADO_NOVO = 2;
    private int estadoAtual = ESTADO_INICIAL;

    /**
     * Este método gerencia o estado dos botões e campos da interface de usuário com base no estado atual da aplicação.
     * Ele é usado para controlar a habilitação, desabilitação e configuração de campos e botões, dependendo do contexto.
     */
    private void gerenciadorDeBotoes() {
        switch (estadoAtual) {
            case ESTADO_INICIAL:
                botaoNovo.setEnabled(true);
                botaoSalvar.setEnabled(false);
                botaoEditar.setEnabled(false);
                botaoExcluir.setEnabled(false);
                botaoLimpar.setEnabled(false);
                textoNomeCadastro.setEditable(false);
                textoNomeCadastro.setBackground(Color.LIGHT_GRAY);
                break;
            case ESTADO_EDITANDO:
                botaoNovo.setEnabled(false);
                botaoSalvar.setEnabled(false);
                botaoEditar.setEnabled(true);
                botaoExcluir.setEnabled(true);
                botaoLimpar.setEnabled(true);
                textoNomeCadastro.setEditable(true);
                textoNomeCadastro.setBackground(Color.WHITE);
                break;
            case ESTADO_NOVO:
                painelComAbasCliente.setSelectedIndex(0);
                botaoNovo.setEnabled(false);
                botaoSalvar.setEnabled(true);
                botaoEditar.setEnabled(false);
                botaoExcluir.setEnabled(false);
                botaoLimpar.setEnabled(true);
                textoNomeCadastro.setEditable(true);
                textoNomeCadastro.setBackground(Color.WHITE);
                break;
            default:
        }
    }


    /**
     * variável global que é determinada de acordo com um cliente selecionado na 'tabelaExibicaoClientes'
     * tendo armazenado o id de determinado registro, podemos executar os métodos de excluir e editar registros
     */
    private Integer idSelecionado;

    /**
     * lista todos os clientes registrados no banco de dados ta tabela de visualização clientes (tabelaExibicaoClientesLista)
     */
    public void listarClienteNaTabela() {
        ClienteDao dao = new ClienteDao();
        List<Cliente> lista = dao.listarClientes();
        DefaultTableModel dados = (DefaultTableModel) tabelaExibicaoClientesLista.getModel();
        dados.setNumRows(0);
        for (Cliente cliente : lista) {
            dados.addRow(new Object[]{
                    cliente.getId(),
                    cliente.getNome()
            });
        }
    }

    /**
     * Creates new form ClienteView
     */
    public ClienteView() {
        initComponents();
        gerenciadorDeBotoes();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        painelComAbasCliente = new javax.swing.JTabbedPane();
        painelDadosCliente = new javax.swing.JPanel();
        campoNomePesquisa = new javax.swing.JLabel();
        textoNomeCadastro = new javax.swing.JTextField();
        painelConsultaClientes = new javax.swing.JPanel();
        campoNomeCadastro = new javax.swing.JLabel();
        textoNomePesquisa = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaExibicaoClientesLista = new javax.swing.JTable();
        botaoPesquisarCliente = new javax.swing.JButton();
        botaoEditar = new javax.swing.JButton();
        botaoSalvar = new javax.swing.JButton();
        botaoNovo = new javax.swing.JButton();
        botaoLimpar = new javax.swing.JButton();
        botaoExcluir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro Clientes");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Cadastro de Clientes");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(217, 217, 217)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(56, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(51, 51, 51))
        );

        painelComAbasCliente.setBackground(new java.awt.Color(255, 255, 255));
        painelComAbasCliente.setForeground(new java.awt.Color(0, 0, 0));

        painelDadosCliente.setBackground(new java.awt.Color(204, 204, 204));

        campoNomePesquisa.setBackground(new java.awt.Color(204, 204, 204));
        campoNomePesquisa.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        campoNomePesquisa.setForeground(new java.awt.Color(0, 0, 0));
        campoNomePesquisa.setText("Nome:");
        campoNomePesquisa.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        textoNomeCadastro.setBackground(new java.awt.Color(255, 255, 255));
        textoNomeCadastro.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        textoNomeCadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textoNomeCadastroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelDadosClienteLayout = new javax.swing.GroupLayout(painelDadosCliente);
        painelDadosCliente.setLayout(painelDadosClienteLayout);
        painelDadosClienteLayout.setHorizontalGroup(
            painelDadosClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelDadosClienteLayout.createSequentialGroup()
                .addGap(125, 125, 125)
                .addComponent(campoNomePesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(textoNomeCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(167, Short.MAX_VALUE))
        );
        painelDadosClienteLayout.setVerticalGroup(
            painelDadosClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelDadosClienteLayout.createSequentialGroup()
                .addGap(162, 162, 162)
                .addGroup(painelDadosClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoNomePesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textoNomeCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(267, Short.MAX_VALUE))
        );

        painelComAbasCliente.addTab("Dados do Cliente", painelDadosCliente);

        painelConsultaClientes.setBackground(new java.awt.Color(204, 204, 204));

        campoNomeCadastro.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        campoNomeCadastro.setForeground(new java.awt.Color(0, 0, 0));
        campoNomeCadastro.setText("Nome:");
        campoNomeCadastro.setBorder(new javax.swing.border.MatteBorder(null));

        textoNomePesquisa.setBackground(new java.awt.Color(255, 255, 255));
        textoNomePesquisa.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        textoNomePesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textoNomePesquisaActionPerformed(evt);
            }
        });
        textoNomePesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textoNomePesquisaKeyPressed(evt);
            }
        });

        tabelaExibicaoClientesLista.setBackground(new java.awt.Color(255, 255, 255));
        tabelaExibicaoClientesLista.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tabelaExibicaoClientesLista.setForeground(new java.awt.Color(0, 0, 0));
        tabelaExibicaoClientesLista.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Identificador", "Nome"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaExibicaoClientesLista.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaExibicaoClientesListaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaExibicaoClientesLista);

        botaoPesquisarCliente.setBackground(new java.awt.Color(255, 255, 255));
        botaoPesquisarCliente.setForeground(new java.awt.Color(0, 0, 0));
        botaoPesquisarCliente.setText("Pesquisar");
        botaoPesquisarCliente.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        botaoPesquisarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoPesquisarClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelConsultaClientesLayout = new javax.swing.GroupLayout(painelConsultaClientes);
        painelConsultaClientes.setLayout(painelConsultaClientesLayout);
        painelConsultaClientesLayout.setHorizontalGroup(
            painelConsultaClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelConsultaClientesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(campoNomeCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(textoNomePesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botaoPesquisarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(173, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
        );
        painelConsultaClientesLayout.setVerticalGroup(
            painelConsultaClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelConsultaClientesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelConsultaClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelConsultaClientesLayout.createSequentialGroup()
                        .addComponent(campoNomeCadastro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(1, 1, 1))
                    .addGroup(painelConsultaClientesLayout.createSequentialGroup()
                        .addComponent(botaoPesquisarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(painelConsultaClientesLayout.createSequentialGroup()
                        .addComponent(textoNomePesquisa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        painelComAbasCliente.addTab("Consulta de Clientes", painelConsultaClientes);

        botaoEditar.setText("EDITAR");
        botaoEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoEditarActionPerformed(evt);
            }
        });

        botaoSalvar.setText("SALVAR");
        botaoSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSalvarActionPerformed(evt);
            }
        });

        botaoNovo.setText("NOVO");
        botaoNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoNovoActionPerformed(evt);
            }
        });

        botaoLimpar.setText("LIMPAR");
        botaoLimpar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botaoLimparMouseClicked(evt);
            }
        });
        botaoLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoLimparActionPerformed(evt);
            }
        });

        botaoExcluir.setText("EXCLUIR");
        botaoExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(painelComAbasCliente)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(botaoNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(botaoSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botaoEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botaoExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botaoLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {botaoEditar, botaoLimpar, botaoNovo, botaoSalvar});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(painelComAbasCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 493, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {botaoEditar, botaoLimpar, botaoNovo, botaoSalvar});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textoNomeCadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textoNomeCadastroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textoNomeCadastroActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // Carrega a lista de clientes na tela de busca clientes
        listarClienteNaTabela();
    }//GEN-LAST:event_formWindowActivated

    private void textoNomePesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textoNomePesquisaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textoNomePesquisaActionPerformed

    /**
     * Executa a busca de clientes no banco de dados de acordo com os caracteres no nome,
     * de modo a retornar na tabela de exibição de clientes registrados.
     *
     * @param evt
     */
    private void botaoPesquisarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoPesquisarClienteActionPerformed
        String nomeDesejado = textoNomePesquisa.getText();

        ClienteDao dao = new ClienteDao();
        List<Cliente> lista = dao.listarClientesPorNome(nomeDesejado);
        DefaultTableModel dados = (DefaultTableModel) tabelaExibicaoClientesLista.getModel();
        dados.setNumRows(0);
        for (Cliente cliente : lista) {
            dados.addRow(new Object[]{
                    cliente.getId(),
                    cliente.getNome()
            });
        }
    }//GEN-LAST:event_botaoPesquisarClienteActionPerformed



    /**
     * Limpa os campos e redefine o estado atual para o estado inicial.
     *
     * @param evt
     */
    private void botaoLimparMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botaoLimparMouseClicked
        // TODO add your handling code here:
        this.estadoAtual = ESTADO_INICIAL;
        gerenciadorDeBotoes();
        this.idSelecionado = null;
        new Utilities().limpaCampos(painelDadosCliente);
    }//GEN-LAST:event_botaoLimparMouseClicked

    /**
     * Realiza uma busca instantânea por clientes que tenham no nome os caracteres inseridos no campo de busca
     * da aba consulta clientes.
     *
     * @param evt
     */
    private void textoNomePesquisaKeyPressed(java.awt.event.KeyEvent evt) {
        String nomeDesejado = textoNomePesquisa.getText();
        ClienteDao dao = new ClienteDao();
        List<Cliente> lista = dao.listarClientesPorNome(nomeDesejado);
        DefaultTableModel dados = (DefaultTableModel) tabelaExibicaoClientesLista.getModel();
        dados.setNumRows(0);
        for (Cliente cliente : lista) {
            dados.addRow(new Object[]{
                    cliente.getId(),
                    cliente.getNome()
            });
        }
    }

    /**
     * Seleciona um cliente na tabela de exibição de clientes e preenche o campo 'textoNomeCadastro'
     * na janela 'dados do cliente' para permitir edição ou exclusão do cliente selecionado.
     *
     * @param evt
     */
    private void tabelaExibicaoClientesListaMouseClicked(java.awt.event.MouseEvent evt) {
        painelComAbasCliente.setSelectedIndex(0);
        this.idSelecionado = Integer.parseInt(tabelaExibicaoClientesLista.getValueAt(tabelaExibicaoClientesLista.getSelectedRow(), 0).toString());
        textoNomeCadastro.setText(tabelaExibicaoClientesLista.getValueAt(tabelaExibicaoClientesLista.getSelectedRow(), 1).toString());
        estadoAtual = ESTADO_EDITANDO;
        gerenciadorDeBotoes();
    }

    /**
     * Inicia a criação de um novo cliente.
     *
     * @param evt
     */
    private void botaoNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoNovoActionPerformed
        // TODO add your handling code here:
        estadoAtual = ESTADO_NOVO;
        gerenciadorDeBotoes();
    }//GEN-LAST:event_botaoNovoActionPerformed

    /**
     * realiza a chamada de uma sequência de métodos responsáveis por salvar um novo registro no banco de dados
     *
     * @param evt
     */
    private void botaoSalvarActionPerformed(java.awt.event.ActionEvent evt) {
        String nome = textoNomeCadastro.getText().trim();

        if (!nome.isEmpty()) {
            Cliente cliente = new Cliente();
            cliente.setNome(nome);
            ClienteDao dao = new ClienteDao();
            dao.cadastrarCliente(cliente);
            new Utilities().limpaCampos(painelDadosCliente);
            estadoAtual = ESTADO_INICIAL;
            gerenciadorDeBotoes();
        } else {
            JOptionPane.showMessageDialog(null, "Insira um nome válido para um novo registro");
        }

    }

    /**
     * realiza a chamada de uma sequência de métodos responsáveis pela edição de um registro presente no banco de dados
     * @param evt
     */
    private void botaoEditarActionPerformed(java.awt.event.ActionEvent evt) {
        if (this.idSelecionado != null) {
            Cliente cliente = new Cliente();
            cliente.setId(this.idSelecionado);
            cliente.setNome(textoNomeCadastro.getText());
            ClienteDao dao = new ClienteDao();
            dao.editarCliente(cliente);
        }
        new Utilities().limpaCampos(painelDadosCliente);
        this.idSelecionado = null;
        estadoAtual = ESTADO_INICIAL;
        gerenciadorDeBotoes();
    }

    /**
     * realiza a chamada de uma sequência de métodos responsáveis pela exclusão de um registro presente no banco de dados
     * @param evt
     */
    private void botaoExcluirActionPerformed(java.awt.event.ActionEvent evt) {
        if (this.idSelecionado != null) {
            ClienteDao dao = new ClienteDao();
            dao.excluirCliente(idSelecionado);
        }
        new Utilities().limpaCampos(painelDadosCliente);
        this.idSelecionado = null;
        estadoAtual = ESTADO_INICIAL;
        gerenciadorDeBotoes();
    }

    /**
     * Limpa os campos e redefine o estado atual para o estado inicial.
     *
     * @param evt
     */
    private void botaoLimparActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        this.estadoAtual = ESTADO_INICIAL;
        gerenciadorDeBotoes();
        this.idSelecionado = null;
        new Utilities().limpaCampos(painelDadosCliente);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClienteView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClienteView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClienteView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClienteView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClienteView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoEditar;
    private javax.swing.JButton botaoExcluir;
    private javax.swing.JButton botaoLimpar;
    private javax.swing.JButton botaoNovo;
    private javax.swing.JButton botaoPesquisarCliente;
    private javax.swing.JButton botaoSalvar;
    private javax.swing.JLabel campoNomeCadastro;
    private javax.swing.JLabel campoNomePesquisa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTabbedPane painelComAbasCliente;
    private javax.swing.JPanel painelConsultaClientes;
    private javax.swing.JPanel painelDadosCliente;
    public javax.swing.JTable tabelaExibicaoClientesLista;
    private javax.swing.JTextField textoNomeCadastro;
    private javax.swing.JTextField textoNomePesquisa;
    // End of variables declaration//GEN-END:variables
}
